{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./app/app-routing.module.ts","webpack:///./app/app.component.html","webpack:///./app/app.component.ts","webpack:///./app/app.module.ts","webpack:///./app/shared/dataService.ts","webpack:///./app/shop/productList.component.html","webpack:///./app/shop/productList.component.ts","webpack:///./environments/environment.ts","webpack:///./main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-9\\\">\\r\\n        <h3>{{title}}</h3>\\r\\n        <product-list></product-list>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-3\\\">\\r\\n        <div class=\\\"card p-2\\\">\\r\\n            <h3>Cart</h3>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'the-shop',\n  templateUrl: \"./app.component.html\",\n  styles: []\n})\nexport class AppComponent {\n  title = 'Product List';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { APP_BASE_HREF } from '@angular/common';\nimport { ProductList } from './shop/productList.component';\nimport { DataService } from './shared/dataService';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        ProductList\n    ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        HttpClientModule\n    ],\n    providers: [\n        { provide: APP_BASE_HREF, useValue: '/App/Shop' },\n        DataService\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","﻿import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map, retry } from \"rxjs/operators\";\r\n\r\n@Injectable()\r\nexport class DataService {\r\n\r\n    constructor(private http: HttpClient) {\r\n\r\n    }\r\n\r\n\r\n    public products = [\r\n       \r\n    ];\r\n\r\n    loadProducts() {\r\n       return this.http.get(\"/api/products\")\r\n            .pipe(\r\n                map((data: any[])=> {\r\n                    this.products = data;\r\n                    return true;\r\n                }));\r\n    }\r\n}","module.exports = \"<div class=\\\"row\\\">\\r\\n    <ul>\\r\\n        <li *ngFor=\\\"let p of products\\\">{{ p.title }}: {{ p.price | currency }}</li>\\r\\n    </ul>\\r\\n</div>\"","﻿import { Component, OnInit } from \"@angular/core\";\r\nimport { DataService } from \"../shared/dataService\";\r\n\r\n@Component({\r\n    selector: \"product-list\",\r\n    templateUrl: \"productList.component.html\",\r\n    styleUrls:[]\r\n})\r\nexport class ProductList implements OnInit {\r\n\r\n    constructor(private data:DataService) {\r\n        \r\n    }\r\n\r\n    public products = [\r\n    ];\r\n\r\n    ngOnInit(): void {\r\n        this.data.loadProducts()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.products = this.data.products;\r\n                }\r\n            });\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}